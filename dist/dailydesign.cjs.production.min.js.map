{"version":3,"file":"dailydesign.cjs.production.min.js","sources":["../src/Shot.ts","../src/db/db.config.ts","../src/index.ts"],"sourcesContent":["import mongoose from \"mongoose\";\r\nconst lastShot = new mongoose.Schema({\r\n  shotID: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  access: {\r\n    type: Boolean,\r\n    default: true,\r\n  },\r\n});\r\n\r\nexport default  mongoose.model(\"lastShot\", lastShot);\r\n","import mongoose from \"mongoose\";\r\nimport \"dotenv/config\"\r\n\r\nconst connection = mongoose.connect(process.env.CONNECTION_STRING as string, (err) => {\r\n  console.log(err);\r\n});\r\n\r\nexport default connection;\r\n","import { BaseGuildTextChannel, ChannelType, Client } from \"discord.js\";\r\nimport puppeteer from \"puppeteer\";\r\nimport cron from \"node-cron\";\r\nimport DribbbleShot from \"./Shot\";\r\nimport \"./db/db.config\";\r\nimport \"dotenv/config\";\r\n//create a discord client to send messages to channels inside bot servers\r\nconst client = new Client({\r\n  intents: [\"GuildMessages\", \"Guilds\", \"GuildMessageTyping\"],\r\n});\r\n\r\n\r\nclient.on(\"ready\", async () => {\r\n  console.log(\"Bot is ready\");\r\n\r\n  client.guilds.cache.map(async (guild) => {\r\n    const existedChannel = guild.channels.cache.find(\r\n      (channel) => channel.name === \"ðŸ’¡-inspirations\"\r\n    );\r\n\r\n    if (!existedChannel)\r\n      await guild.channels.create({\r\n        name: \"ðŸ’¡-inspirations\",\r\n      });\r\n  });\r\n\r\n  const getInspirationChannels = async () => {\r\n    //map over guilds and find channel with id of name inspiration\r\n    const inspirationChannels = client.guilds.cache.map((guild) => {\r\n      const channel = guild.channels.cache.find(\r\n        (channel) => channel.name === \"ðŸ’¡-inspirations\" && channel.type === ChannelType.GuildText\r\n      );\r\n      if(!channel) return;\r\n      return channel as BaseGuildTextChannel;\r\n    });\r\n\r\n    return inspirationChannels;\r\n  };\r\n\r\n\r\n\r\n  cron.schedule(\"* * */1 * *\", async () => {\r\n    try {\r\n      const browser = await puppeteer.launch({\r\n        args: [\"--no-sandbox\", \"--disable-setuid-sandbox\"],\r\n      });\r\n      const page = await browser.newPage();\r\n      await page.goto(\"https://dribbble.com/shots/popular\", {\r\n        waitUntil: \"load\",\r\n        timeout: 0,\r\n      });\r\n      \r\n      const shotID = await page.evaluate(() => {\r\n        const shot = document.querySelector(\".shot-thumbnail-link\");\r\n        return shot?.getAttribute(\"href\");\r\n      });\r\n\r\n      if(!shotID) return browser.close();\r\n\r\n      const existedShot = await DribbbleShot.findOne({ shotID: shotID });\r\n\r\n      if (existedShot) return browser.close();\r\n\r\n      const newShot = new DribbbleShot({\r\n        shotID: shotID,\r\n      });\r\n\r\n      await newShot.save();\r\n\r\n      const inspirationChannels = await getInspirationChannels();\r\n\r\n      inspirationChannels.map(async (channel) => {\r\n        if(channel)\r\n        await channel.send(`https://dribbble.com${shotID}`);\r\n      });\r\n\r\n\r\n      return browser.close();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  });\r\n});\r\n\r\nclient.login(process.env.BOT_TOKEN);\r\n"],"names":["lastShot","mongoose","Schema","shotID","type","String","required","access","Boolean","default","DribbbleShot","model","process","client","Client","intents","on","_asyncToGenerator","_regeneratorRuntime","mark","_callee5","getInspirationChannels","wrap","_context5","prev","next","console","log","guilds","cache","map","_ref2","guild","_context","channels","find","channel","name","create","stop","_callee","_x","apply","this","arguments","_ref3","_callee2","inspirationChannels","_context2","ChannelType","GuildText","abrupt","cron","schedule","_callee4","browser","page","newShot","_context4","puppeteer","launch","args","sent","newPage","waitUntil","timeout","evaluate","shot","document","querySelector","getAttribute","close","findOne","save","_ref5","_context3","send","_callee3","_x2","t0","error","login","env","BOT_TOKEN"],"mappings":"0+NACA,IAAMA,EAAW,IAAIC,EAAQ,QAACC,OAAO,CACnCC,OAAQ,CACNC,KAAMC,OACNC,UAAU,GAEZC,OAAQ,CACNH,KAAMI,QACNC,SAAS,KAIbC,EAAgBT,UAASU,MAAM,WAAYX,GCTPY,QCIpC,IAAMC,EAAS,IAAIC,EAAAA,OAAO,CACxBC,QAAS,CAAC,gBAAiB,SAAU,wBAIvCF,EAAOG,GAAG,QAASC,EAAAC,IAAAC,MAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAH,IAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EACjBC,QAAQC,IAAI,gBAEZd,EAAOe,OAAOC,MAAMC,IAAG,WAAA,IAAAC,EAAAd,EAAAC,IAAAC,MAAC,WAAOa,GAAK,OAAAd,IAAAI,MAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAAR,MAAA,KAAA,EAGjC,GAFsBO,EAAME,SAASL,MAAMM,MAC1C,SAACC,GAAO,MAAsB,oBAAjBA,EAAQC,QAGJ,CAAAJ,EAAAR,KAAA,EAAA,KAAA,CAAA,OAAAQ,EAAAR,KAAA,EACXO,EAAME,SAASI,OAAO,CAC1BD,KAAM,oBACN,KAAA,EAAA,IAAA,MAAA,OAAAJ,EAAAM,OAAA,GAAAC,EACL,KAAA,OAAA,SAAAC,GAAA,OAAAV,EAAAW,MAAAC,KAAAC,UAAA,CAAC,CATqB,IAWjBvB,EAAsB,WAAA,IAAGwB,EAAA5B,EAAAC,IAAAC,MAAA,SAAA2B,IAAA,IAAAC,EAAA,OAAA7B,IAAAI,MAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,KAAA,EAQ3B,OANIsB,EAAsBlC,EAAOe,OAAOC,MAAMC,KAAI,SAACE,GACnD,IAAMI,EAAUJ,EAAME,SAASL,MAAMM,MACnC,SAACC,GAAO,MAAsB,oBAAjBA,EAAQC,MAA8BD,EAAQhC,OAAS6C,EAAWA,YAACC,aAElF,GAAId,EACJ,OAAOA,CACT,IAAEY,EAAAG,OAAA,SAEKJ,GAAmB,KAAA,EAAA,IAAA,MAAA,OAAAC,EAAAT,OAAA,GAAAO,EAC3B,KAAA,OAAA,WAX2B,OAAAD,EAAAH,MAAAC,KAAAC,UAAA,CAAA,CAAA,GAe5BQ,EAAI,QAACC,SAAS,cAAepC,EAAAC,IAAAC,MAAA,SAAAmC,IAAA,IAAAC,EAAAC,EAAArD,EAAAsD,EAAA,OAAAvC,IAAAI,MAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,KAAA,EAAA,OAAAiC,EAAAlC,KAAA,EAAAkC,EAAAjC,KAAA,EAEHkC,EAAAA,QAAUC,OAAO,CACrCC,KAAM,CAAC,eAAgB,8BACvB,KAAA,EAFW,OAAPN,EAAOG,EAAAI,KAAAJ,EAAAjC,KAAA,EAGM8B,EAAQQ,UAAS,KAAA,EAA1B,OAAJP,EAAIE,EAAAI,KAAAJ,EAAAjC,KAAA,EACJ+B,EAAI,KAAM,qCAAsC,CACpDQ,UAAW,OACXC,QAAS,IACT,KAAA,EAAA,OAAAP,EAAAjC,KAAA,GAEmB+B,EAAKU,UAAS,WACjC,IAAMC,EAAOC,SAASC,cAAc,wBACpC,OAAOF,MAAAA,OAAAA,EAAAA,EAAMG,aAAa,OAC5B,IAAE,KAAA,GAHU,GAANnE,EAAMuD,EAAAI,KAKF,CAAAJ,EAAAjC,KAAA,GAAA,KAAA,CAAA,OAAS8B,EAAAA,OAAAA,SAAAA,EAAQgB,SAAO,KAAA,GAAA,OAAAb,EAAAjC,KAAA,GAERf,EAAa8D,QAAQ,CAAErE,OAAQA,IAAS,KAAA,GAAjD,IAAAuD,EAAAI,KAEF,CAAAJ,EAAAjC,KAAA,GAAA,KAAA,CAAA,OAAS8B,EAAAA,OAAAA,SAAAA,EAAQgB,SAAO,KAAA,GAIrC,OAFId,EAAU,IAAI/C,EAAa,CAC/BP,OAAQA,IACRuD,EAAAjC,KAAA,GAEIgC,EAAQgB,OAAM,KAAA,GAAA,OAAAf,EAAAjC,KAAA,GAEcJ,IAAwB,KAAA,GAKvD,OALsBqC,EAAAI,KAELhC,IAAG,WAAA,IAAA4C,EAAAzD,EAAAC,IAAAC,MAAC,WAAOiB,GAAO,OAAAlB,IAAAI,MAAA,SAAAqD,GAAA,cAAAA,EAAAnD,KAAAmD,EAAAlD,MAAA,KAAA,EAAA,IACjCW,EAAO,CAAAuC,EAAAlD,KAAA,EAAA,KAAA,CAAA,OAAAkD,EAAAlD,KAAA,EACJW,EAAQwC,KAAI,uBAAwBzE,GAAS,KAAA,EAAA,IAAA,MAAA,OAAAwE,EAAApC,OAAA,GAAAsC,EACpD,KAAA,OAAA,SAAAC,GAAA,OAAAJ,EAAAhC,MAAAC,KAAAC,UAAA,CAAC,CAHqB,IAMhBW,EAAAA,OAAAA,SAAAA,EAAQgB,SAAO,KAAA,GAAAb,EAAAlC,KAAA,GAAAkC,EAAAqB,GAAArB,EAAA,MAAA,GAEtBhC,QAAQsD,MAAYtB,EAAAqB,IAAC,KAAA,GAAA,IAAA,MAAA,OAAArB,EAAAnB,OAAA,GAAAe,EAAA,KAAA,CAAA,CAAA,EAAA,KAExB,MAAE,KAAA,EAAA,IAAA,MAAA,OAAA/B,EAAAgB,OAAA,GAAAnB,EAAA,MAGLP,EAAOoE,MAAMrE,QAAQsE,IAAIC"}